{"version":3,"sources":["serviceWorker.js","Volume.js","scholar.js","index.js"],"names":["Boolean","window","location","hostname","match","YearSlider","props","context","handleOnChange","value","setState","volume","state","this","className","tooltip","format","display","step","orientation","onChange","Component","ResumePrev3","class","src","alt","React","Together2","ReactDOM","render","document","getElementById","GenderSlider","Slide","Slide2","DivTest","to","Bottomborder","id","Resume","name","gender","hometown","ethnicity","ResumePrev","console","log","data","map","student","exact","path","component","ResumePrev2","token","href","Together","fetch","then","json","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.b8752344.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\nimport Slider from 'react-rangeslider'\n\nclass YearSlider extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      volume: 0\n    }\n  }\n\n  handleOnChange = (value) => {\n    this.setState({\n      volume: value\n    })\n  }\n \n\n  render() {\n    let { volume } = this.state\n    return (<div className=\"inslide\">\n      <Slider\n        tooltip = {true}\n        format ={this.display}\n        step = {10}\n        value={volume}\n        orientation=\"horizontal\"\n        onChange={this.handleOnChange}\n      />\n      </div>\n    )\n  }\n}\n\n\nexport default YearSlider \n","import ReactDOM from 'react-dom';\nimport './scholar.css';\nimport React from \"react\";\n \nclass ResumePrev3 extends React.Component\n{\n    render(){\n        return   <div className = \"allresu3\">\n           \n            <div class=\"resu3\">\n            <h1>BIO</h1>\n            <h2>__________</h2>\n            <img src='/Bio.png' alt='test'/>\n            <h1>ClASS SCHEDULE</h1>\n            <h2>__________</h2>\n            <div class=\"image2\">\n            <img src='/resume.png' alt='test'/>\n            </div> \n            <div class=\"image3\">\n            <img src='/schedule.png' alt='test'/>\n            </div> \n            <h3>RESUME</h3>\n            <h4>__________</h4>\n            </div>\n             \n           \n        </div> \n        \n     \n    }\n\n}\n\nclass Together2 extends React.Component{\n  //Combines my Event class and the DivTest Class.\n  render(){\n      return <div>\n          <ResumePrev3></ResumePrev3>\n         \n      </div>\n\n  }\n}\n\n\n\n\n\nReactDOM.render(<Together2 />, document.getElementById('root'));\n\n \nexport default Together2;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; \nimport * as serviceWorker from './serviceWorker';\nimport YearSlider from './Volume';\nimport 'react-rangeslider/lib/index.css';\nimport { Component } from 'react'\nimport Slider from 'react-rangeslider'\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport Together2 from \"./scholar\";\n\n\nclass GenderSlider extends Component {\n    constructor(props, context) {\n      super(props, context)\n      this.state = {\n        volume: 0\n      }\n    }\n  \n    handleOnChange = (value) => {\n      this.setState({\n        volume: value\n      })\n    }\n   \n  \n    render() {\n      let { volume } = this.state\n      return (<div className=\"inslide\">\n        <Slider\n          tooltip = {true}\n          format ={this.display}\n          step = {10}\n          value={volume}\n          orientation=\"horizontal\"\n          onChange={this.handleOnChange}/>\n        </div>\n      )\n    }\n  }\n\n\n  \n \nconst Slide = () => (\n    <div className=\"slide\">\n    <h1>STUDENT YEAR</h1>\n    \n    \n      <YearSlider />\n    </div>\n  );\n\n    \nconst Slide2 = () => (\n<div className=\"slide2\">\n<h1>STUDENT PERSONALITY</h1>\n    <GenderSlider />\n</div>\n); \n\n\nclass DivTest extends React.Component{\n    render() {\n        return <HashRouter>\n         <div class=\"menu\"> \n            <h1> DIGITAL SCHOLAR </h1>\n            <li><NavLink to=\"/index\">REMOVE SCHOLAR</NavLink></li>\n        </div>; \n        </HashRouter>\n    }\n}\n\n\n\n\nclass Bottomborder extends React.Component{\n    render(){\n        return <div className=\"info\"> \n        <div id=\"rectangle\" ></div>\n        </div>; \n    }\n    \n}\n\nfunction Resume(props) {\n    return (\n        <div class=\"resu\">\n            <h1>{props.name}</h1> \n            <h3>{props.gender}</h3>\n            <h3>{props.hometown}</h3>\n            <h3>{props.ethnicity}</h3>\n            <NavLink to=\"/scholar\">\n                See Details\n            </NavLink>\n            <h2>______________________ </h2>\n        </div>\n    ); \n}\n\nfunction ResumePrev(props) {\n    console.log(props)\n    return (\n\t    <HashRouter>\n\t    <div className = \"allresu\">\n\t\t{props.data.map(student => \n\t\t\t   <Resume name={student.name}\n\t\t\t   gender={student.gender}\n\t\t\t   hometown={student.hometown}\n\t\t\t   ethnicity={student.ethnicity}>\n\t\t\t   </Resume>\n\t\t\t   )}\n                    <div className=\"content\">\n                    <Route exact path=\"/scholar\" component={Together2}/>\n                    </div>\n\t\t </div>\n            </HashRouter>); \n}\n\n\nclass ResumePrev2 extends React.Component\n{\n\n    render(){\n        return <HashRouter>\n\t    <p>My Token = {window.token}</p>\n        <div className = \"allresu2\">\n            <div class=\"resu\">\n            <h1>SCHOLAR 2</h1> \n            <a href=\"#link 1\">NAME</a>\n            <h3>GENDER</h3>\n            <h3>HOME TOWN</h3>\n            <h3>ETHNICITY</h3>\n            <h2>______________________ </h2>\n            </div>\n            <div class=\"resu\">\n            <h1>SCHOLAR 4</h1>  \n            <a href=\"#link 2\">NAME</a>\n            <h3>GENDER</h3>\n            <h3>HOME TOWN</h3>\n            <h3>ETHNICITY</h3>\n            <h2>______________________ </h2>\n            </div>\n            <div class=\"resu\">\n            <h1>SCHOLAR 6</h1>  \n            <a href=\"#link 3\">NAME</a>\n            <h3>GENDER</h3>\n            <h3>HOME TOWN</h3>\n            <h3>ETHNICITY</h3>\n            <h2>______________________ </h2>\n            </div>\n            <div class=\"resu\">\n            <h1>SCHOLAR 8</h1>  \n            <a href=\"#link 4\">NAME</a>\n            <h3>GENDER</h3>\n            <h3>HOME TOWN</h3>\n            <h3>ETHNICITY</h3>\n            </div>\n        </div>\n      </HashRouter>\n     \n    }\n\n}\n\n\n\n\nclass Together extends React.Component{\n    constructor() {\n\tsuper()\n\t    this.state = {student: [{name: \"STUDENT1\", gender: \"NONE\", hometown: \"NONE\", ethnicity: \"NONE\"},\n\t{name: \"STUDENT1\", gender: \"NONE\", hometown: \"NONE\", ethnicity: \"NONE\"},\n\t{name: \"STUDENT1\", gender: \"NONE\", hometown: \"NONE\", ethnicity: \"NONE\"},\n\t{name: \"STUDENT1\", gender: \"NONE\", hometown: \"NONE\", ethnicity: \"NONE\"}]\n\t};    \n    }\n\n    componentDidMount() {\n\tfetch(\"/api/1\")\n\t    .then(data => data.json())\n\t    .then(data => this.setState({student: data}))\n\t    }\n    render(){\n        return <div>\n            <DivTest></DivTest>\n            <Slide></Slide>\n            <Slide2></Slide2>\n            <Bottomborder></Bottomborder>\n            <ResumePrev2></ResumePrev2>\n            <ResumePrev data={this.state.student}></ResumePrev>\n           \n        </div>\n\n    }\n}\n\n\n\nReactDOM.render(<Together />, document.getElementById('root'));\n\n/*\nvar element = React.createElement('h1', {className:'greeting'}, 'Hello word!');\nReactDOM.render(element, document.getElementById('root'));\n*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}